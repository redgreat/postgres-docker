name: dockerpush

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - 'v*'

env:
  DOCKER_IMAGE_NAME: redgreat/postgres
  ALIYUN_REGISTRY: registry.cn-hangzhou.aliyuncs.com
  PLATFORMS: linux/amd64

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Free disk space
        run: |
          df -h /
          sudo apt-get clean
          df -h /

      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: prepare
        id: prep
        run: |
          VERSION=unknown
          if [[ $GITHUB_REF =~ refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF =~ refs/heads/* ]]; then
            VERSION=${GITHUB_SHA::8}
          elif [[ $GITHUB_REF =~ refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          else
            echo "::error::Unexpected GITHUB_REF: $GITHUB_REF"
            exit 1
          fi
          LABEL_VERSION=${VERSION:1}
          TAGS="${{ env.DOCKER_IMAGE_NAME }}:${VERSION}"
          if [[ $GITHUB_REF =~ refs/tags/* ]]; then
            TAGS="$TAGS,${{ env.DOCKER_IMAGE_NAME }}:latest"
          fi
          IS_RELEASE=$([ "$GITHUB_REF" =~ refs/tags/* ] && echo "yes" || echo "no")
          RELEASE_TYPE="n/a"
          if [[ $IS_RELEASE == "yes" ]]; then
            if [[ $GITHUB_REF =~ -pre\.[0-9]+ ]]; then
                RELEASE_TYPE="pre"
            else
                RELEASE_TYPE="standard"
            fi
          fi
          echo "is_release=$IS_RELEASE" >> $GITHUB_OUTPUT
          echo "release_type=$RELEASE_TYPE" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "label_version=$LABEL_VERSION" >> $GITHUB_OUTPUT
          echo "tags=$TAGS" >> $GITHUB_OUTPUT
          echo "build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: docker build
        id: buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: dockerhub login
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: aliyun registry login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_REGISTRY_USER }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

      - name: docker image build & push
        id: docker_build
        uses: docker/build-push-action@v6.4.1
        with:
          context: .
          push: ${{ steps.prep.outputs.is_release == 'yes' }}
          provenance: false
          platforms: ${{ env.PLATFORMS }}
          tags: |
            ${{ steps.prep.outputs.tags }}
            ${{ env.ALIYUN_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.prep.outputs.version }}
          build-args: |
            DOCKER_IMAGE_VERSION=${{ steps.prep.outputs.label_version }}
          cache-from: type=gha,scope=${{ env.DOCKER_IMAGE_NAME }}
          cache-to: type=gha,mode=max,scope=${{ env.DOCKER_IMAGE_NAME }}

      - name: Inspect
        if: ${{ steps.prep.outputs.is_release == 'yes' }}
        run: |
          docker buildx imagetools inspect ${{ env.DOCKER_IMAGE_NAME }}:${{ steps.prep.outputs.version }}

      - name: Dockerhub description
        if: ${{ steps.prep.outputs.release_type == 'standard' }}
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.DOCKER_IMAGE_NAME }}
          readme-filepath: README.Docker.md
